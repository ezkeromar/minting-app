{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledButtonFoot","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledCont","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","claimNFTs","WHITE_LIST_MINT","whiteListMintCount","totalWhiteListed","gasLimit","totalCostWei","String","totalGasLimit","send","to","from","value","once","err","then","receipt","getData","getConfig","fetch","headers","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","textAlign","fontSize","fontWeight","color","TITLE_ONE","TITLE_TWO","MAX_PER_WALLET","target","href","length","substring","Number","onClick","e","preventDefault","Accept","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","paddingTop","SOLD_OUT","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","TWITTER","open","DISCORD","OPENSEA","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88dec198.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: initial;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport store from \"./redux/store\"\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--primary);\n  width: 100px;\n  cursor: pointer;\n  :hover {\n    background-color: var(--primary);\n    color: var(--secondary);\n  }\n`;\n\nexport const StyledButtonFoot = styled.button`\n  padding: 10px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--primary);\n  width: 100px;\n  cursor: pointer;\n  :hover {\n    background-color: var(--primary);\n    color: var(--secondary);\n  }\n  @media (max-width: 766px) {\n    margin-bottom: 24px;\n    max-width: 120px;\n    width: 120px;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (max-width: 766px) {\n    flex-direction: column;\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 150px;\n  @media (min-width: 767px) {\n    width: 150px;\n  }\n  max-height: 100px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  background-color: var(--accent);\n  height: auto;\n  width: 100vw;\n  @media (min-width: 900px) {\n    width: 45vw;\n  }\n  @media (min-width: 1000px) {\n    width: 45vw;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledCont = styled.div`\n  width: 90%;\n  border: 2px solid var(--primary-text);\n  padding: 24px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  align-items: center;\n  @media (max-width: 766px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = async () => {\n    let totalWhiteListed;\n    if (CONFIG.WHITE_LIST_MINT) {\n      totalWhiteListed = await store\n        .getState()\n        .blockchain.smartContract.methods.whiteListMintCount(blockchain.account)\n        .call();\n    } else {\n      totalWhiteListed = mintAmount;\n    }\n    if (totalWhiteListed <= 0) {\n      setFeedback(\"Sorry, You are not in the whiteList wait untill the public sales beggin.\");\n    } else if (totalWhiteListed < mintAmount) {\n      setFeedback(`Sorry, You ecceeded your mint amount${mintAmount}.`);\n    } else {\n      let cost = CONFIG.WEI_COST;\n      let gasLimit = CONFIG.GAS_LIMIT;\n      let totalCostWei = String(cost * mintAmount);\n      let totalGasLimit = String(gasLimit * mintAmount);\n      console.log(\"Cost: \", totalCostWei);\n      console.log(\"Gas limit: \", totalGasLimit);\n      setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n      setClaimingNft(true);\n      blockchain.smartContract.methods\n        // .mint(blockchain.account, mintAmount)\n        .totalSupply()\n        .send({\n          gasLimit: String(totalGasLimit),\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setClaimingNft(false);\n        })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n          );\n          setClaimingNft(false);\n        });\n      }\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: \"24px 0\", backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: \"24px 0\" }}>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/examples.png\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              padding: 24,\n              borderRadius: 24,\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {CONFIG.TITLE_ONE}\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {CONFIG.TITLE_TWO}\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: \"25\",\n                color: \"var(--accent)\",\n              }}\n            >\n              {CONFIG.MAX_PER_WALLET}\n            </s.TextTitle>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                    <s.TextTitle\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: 20,\n                        fontWeight: \"bold\",\n                        color: \"var(--accent-text)\",\n                        paddingTop: 25\n                      }}\n                    >\n                      {CONFIG.SOLD_OUT}\n                    </s.TextTitle>\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <StyledCont>\n          {CONFIG.TWITTER != \"\" ? (\n            <StyledButtonFoot\n              onClick={(e) => {\n                e.preventDefault();\n                window.open(CONFIG.TWITTER, \"_blank\");\n              }}\n            >\n              TWITTER\n            </StyledButtonFoot>\n          ):null}\n          {CONFIG.DISCORD != \"\" ? (\n            <StyledButtonFoot\n              onClick={(e) => {\n                e.preventDefault();\n                window.open(CONFIG.DISCORD, \"_blank\");\n              }}\n            >\n              DISCORD\n            </StyledButtonFoot>\n          ):null}\n          {CONFIG.OPENSEA != \"\" ? (\n            <StyledButtonFoot\n              onClick={(e) => {\n                e.preventDefault();\n                window.open(CONFIG.OPENSEA, \"_blank\");\n              }}\n            >\n              OPENSEA\n            </StyledButtonFoot>\n          ):null}\n          {CONFIG.SCAN_LINK != \"\" ? (\n            <StyledButtonFoot\n              onClick={(e) => {\n                e.preventDefault();\n                window.open(CONFIG.SCAN_LINK, \"_blank\");\n              }} \n              style={{\n                width: 170\n              }}\n            >\n              VERIFY CONTRACT\n            </StyledButtonFoot>\n          ):null}\n        </StyledCont>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}